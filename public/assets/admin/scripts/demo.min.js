/**
Demo script to handle the theme demo
**/

function number_format( number, decimals, dec_point, thousands_sep ) {	// Format a number with grouped thousands
	// 
	// +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)
	// +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
	// +	 bugfix by: Michael White (http://crestidg.com)

	var i, j, kw, kd, km;

	// input sanitation & defaults
	if( isNaN(decimals = Math.abs(decimals)) ){
		decimals = 2;
	}
	if( dec_point == undefined ){
		dec_point = ",";
	}
	if( thousands_sep == undefined ){
		thousands_sep = ".";
	}

	i = parseInt(number = (+number || 0).toFixed(decimals)) + "";

	if( (j = i.length) > 3 ){
		j = j % 3;
	} else{
		j = 0;
	}

	km = (j ? i.substr(0, j) + thousands_sep : "");
	kw = i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands_sep);
	//kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).slice(2) : "");
	kd = (decimals ? dec_point + Math.abs(number - i).toFixed(decimals).replace(/-/, 0).slice(2) : "");


	return km + kw + kd;
}



var Demo = (function() {
    // Handle Theme Settings
    var handleTheme = function() {
        $("#range_1").ionRangeSlider({
            type: "single",
            min: 1,
            max: 100
        });

        $("#tickets").DataTable({ order: [[0, "desc"]] });

        $("#example").DataTable({ order: [[0, "desc"]] });

        $("#ticketsTemplates").DataTable({ order: [[0, "desc"]] });

        $("#ticketsCategories").DataTable({ order: [[0, "desc"]] });

        var uTable = $("#usersTable").DataTable({
            order: [[0, "desc"]],
            columns: [
                { data: "#" },
                { data: "User" },
                { data: "Amount" },
                { data: "Created" },
                { data: "Manager" },
                { data: "Manage" }
            ],
            columnDefs: [
                { targets: 0, width: "5%" },
                { targets: 1, width: "15%" },
                {
                    targets: 2,
                    width: "10%"
                },
                {
                    targets: 3,
                    width: "20%",
                    render: function(data, type, row) {
                        var dateTimeSplit = data.split(" ");
                        var dateSplit = dateTimeSplit[0].split("-");
                        return type === "display" || type === "filter"
                            ? dateSplit[2] +
                                  "." +
                                  dateSplit[1] +
                                  "." +
                                  dateSplit[0] +
                                  " " +
                                  dateTimeSplit[1]
                            : data;
                    }
                },
                {
                    targets: 4,
                    width: "10%"
                },
                {
                    width: "40%"
                }
            ]
        });

        
        var oTable = $("#paymentsTable").DataTable({
            order: [[0, "desc"]],
            columns: [
                { data: "#" },
                { data: "User" },
                { data: "Manager" },
                { data: "Amount" },
                { data: "Date" }
            ],
            columnDefs: [
                { targets: 0, width: "5%" },
                { targets: 1, width: "20%" },
                { targets: 2, width: "15%" },
                {
                    targets: 3,
                    width: "15%",
                    render: function(data, type, row) {
                        return data + "$";
                    }
                },
                {
                    targets: 4,
                    width: "25%",
                    render: function(data, type, row) {
                        var dateTimeSplit = data.split(" ");
                        var dateSplit = dateTimeSplit[0].split("-");
                        return type === "display" || type === "filter"
                            ? dateSplit[2] +
                                  "." +
                                  dateSplit[1] +
                                  "." +
                                  dateSplit[0] +
                                  " " +
                                  dateTimeSplit[1]
                            : data;
                    }
                }
            ]
        });


        oTable.on( 'draw', function (e) {
            var amount = 0;
            oTable.rows({filter: 'applied'}).data().each( function (d) {
                amount += d.Amount * 1;
            });
            $("#payments-itog").text(number_format(amount, 2, '.', ' ') + "$")
            $("#payments-zar").text(number_format(amount * 20 / 100, 2, '.', ' ')  + "$")
        } );

        oTable.on( 'init', function (e) {
            var amount = 0;
            oTable.data().each( function (d) {
                amount += d.Amount * 1;
            });
            $("#payments-itog").text(number_format(amount, 2, '.', ' ') + "$")
            $("#payments-zar").text(number_format(amount * 20 / 100, 2, '.', ' ')  + "$")
        } );

        $.fn.dataTableExt.afnFiltering.push(function(
            oSettings,
            aData,
            iDataIndex
        ) {
            let did = oSettings.nTable.id == 'paymentsTable' ? 4 : 3;
            
            if (typeof aData._date == "undefined") {
                aData._date = new Date(getDateFromFormat(aData[did])).getTime();
            }

            if (minDateFilter && !isNaN(minDateFilter)) {
                if (aData._date < minDateFilter) {
                    return false;
                }
            }

            if (maxDateFilter && !isNaN(maxDateFilter)) {
                if (aData._date > maxDateFilter) {
                    return false;
                }
            }
            return true;
        });

        var getDateFromFormat = function(str) {
            var dateTimeSplit = str.split(" ");
            var dateSplit = dateTimeSplit[0].split(".");
            var ret = dateSplit[2] + "-" + dateSplit[1] + "-" + dateSplit[0];
            return !!dateTimeSplit[1] ? ret + " " + dateTimeSplit[1] : ret;
        };

        $("#datepicker_from")
            .datepicker({
                showOn: "button",
                dateFormat: "dd.mm.yy",
                buttonImage: "/img/datepicker.svg",
                buttonImageOnly: false,
                onSelect: function(date) {
                    minDateFilter = new Date(getDateFromFormat(date)).getTime();
                    oTable.draw();
                    uTable.draw();
                }
            })
            .keyup(function() {
                minDateFilter = new Date(
                    getDateFromFormat(this.value)
                ).getTime();
                oTable.draw();
                uTable.draw();
            });

        $("#datepicker_to")
            .datepicker({
                showOn: "button",
                dateFormat: "dd.mm.yy",
                buttonImage: "/img/datepicker.svg",
                buttonImageOnly: false,
                onSelect: function(date) {
                    maxDateFilter =
                        new Date(getDateFromFormat(date)).getTime() +
                        60 * 60 * 24 * 1000 -
                        1;
                    oTable.draw();
                    uTable.draw();
                }
            })
            .keyup(function() {
                maxDateFilter =
                    new Date(getDateFromFormat(this.value)).getTime() +
                    60 * 60 * 24 * 1000 -
                    1;
                oTable.draw();
                uTable.draw();
            });

        // Date range filter
        minDateFilter = "";
        maxDateFilter = "";

        var panel = $(".theme-panel");

        if ($("body").hasClass("page-boxed") === false) {
            $(".layout-option", panel).val("fluid");
        }

        $(".sidebar-option", panel).val("default");
        $(".page-header-option", panel).val("fixed");
        $(".page-footer-option", panel).val("default");
        if ($(".sidebar-pos-option").attr("disabled") === false) {
            $(".sidebar-pos-option", panel).val(App.isRTL() ? "right" : "left");
        }

        //handle theme layout
        var resetLayout = function() {
            $("body")
                .removeClass("page-boxed")
                .removeClass("page-footer-fixed")
                .removeClass("page-sidebar-fixed")
                .removeClass("page-header-fixed")
                .removeClass("page-sidebar-reversed");

            $(".page-header > .page-header-inner").removeClass("container");

            if (
                $(".page-container")
                    .parent(".container")
                    .size() === 1
            ) {
                $(".page-container").insertAfter("body > .clearfix");
            }

            if ($(".page-footer > .container").size() === 1) {
                $(".page-footer").html($(".page-footer > .container").html());
            } else if (
                $(".page-footer")
                    .parent(".container")
                    .size() === 1
            ) {
                $(".page-footer").insertAfter(".page-container");
                $(".scroll-to-top").insertAfter(".page-footer");
            }

            $(".top-menu > .navbar-nav > li.dropdown").removeClass(
                "dropdown-dark"
            );

            $("body > .container").remove();
        };

        var lastSelectedLayout = "";

        var setLayout = function() {
            var layoutOption = $(".layout-option", panel).val();
            var sidebarOption = $(".sidebar-option", panel).val();
            var headerOption = $(".page-header-option", panel).val();
            var footerOption = $(".page-footer-option", panel).val();
            var sidebarPosOption = $(".sidebar-pos-option", panel).val();
            var sidebarStyleOption = $(".sidebar-style-option", panel).val();
            var sidebarMenuOption = $(".sidebar-menu-option", panel).val();
            var headerTopDropdownStyle = $(
                ".page-header-top-dropdown-style-option",
                panel
            ).val();

            if (sidebarOption == "fixed" && headerOption == "default") {
                alert(
                    "Default Header with Fixed Sidebar option is not supported. Proceed with Fixed Header with Fixed Sidebar."
                );
                $(".page-header-option", panel).val("fixed");
                $(".sidebar-option", panel).val("fixed");
                sidebarOption = "fixed";
                headerOption = "fixed";
            }

            resetLayout(); // reset layout to default state

            if (layoutOption === "boxed") {
                $("body").addClass("page-boxed");

                // set header
                $(".page-header > .page-header-inner").addClass("container");
                var cont = $("body > .page-wrapper > .clearfix").after(
                    '<div class="container"></div>'
                );

                // set content
                $(".page-container").appendTo(
                    "body > .page-wrapper > .container"
                );

                // set footer
                if (footerOption === "fixed") {
                    $(".page-footer").html(
                        '<div class="container">' +
                            $(".page-footer").html() +
                            "</div>"
                    );
                } else {
                    $(".page-footer").appendTo(
                        "body > .page-wrapper > .container"
                    );
                }
            }

            if (lastSelectedLayout != layoutOption) {
                //layout changed, run responsive handler:
                App.runResizeHandlers();
            }
            lastSelectedLayout = layoutOption;

            //header
            if (headerOption === "fixed") {
                $("body").addClass("page-header-fixed");
                $(".page-header")
                    .removeClass("navbar-static-top")
                    .addClass("navbar-fixed-top");
            } else {
                $("body").removeClass("page-header-fixed");
                $(".page-header")
                    .removeClass("navbar-fixed-top")
                    .addClass("navbar-static-top");
            }

            //sidebar
            if ($("body").hasClass("page-full-width") === false) {
                if (sidebarOption === "fixed") {
                    $("body").addClass("page-sidebar-fixed");
                    $("page-sidebar-menu").addClass("page-sidebar-menu-fixed");
                    $("page-sidebar-menu").removeClass(
                        "page-sidebar-menu-default"
                    );
                    Layout.initFixedSidebarHoverEffect();
                } else {
                    $("body").removeClass("page-sidebar-fixed");
                    $("page-sidebar-menu").addClass(
                        "page-sidebar-menu-default"
                    );
                    $("page-sidebar-menu").removeClass(
                        "page-sidebar-menu-fixed"
                    );
                    $(".page-sidebar-menu")
                        .unbind("mouseenter")
                        .unbind("mouseleave");
                }
            }

            // top dropdown style
            if (headerTopDropdownStyle === "dark") {
                $(".top-menu > .navbar-nav > li.dropdown").addClass(
                    "dropdown-dark"
                );
            } else {
                $(".top-menu > .navbar-nav > li.dropdown").removeClass(
                    "dropdown-dark"
                );
            }

            //footer
            if (footerOption === "fixed") {
                $("body").addClass("page-footer-fixed");
            } else {
                $("body").removeClass("page-footer-fixed");
            }

            //sidebar style
            if (sidebarStyleOption === "light") {
                $(".page-sidebar-menu").addClass("page-sidebar-menu-light");
            } else {
                $(".page-sidebar-menu").removeClass("page-sidebar-menu-light");
            }

            //sidebar menu
            if (sidebarMenuOption === "hover") {
                if (sidebarOption == "fixed") {
                    $(".sidebar-menu-option", panel).val("accordion");
                    alert(
                        "Hover Sidebar Menu is not compatible with Fixed Sidebar Mode. Select Default Sidebar Mode Instead."
                    );
                } else {
                    $(".page-sidebar-menu").addClass(
                        "page-sidebar-menu-hover-submenu"
                    );
                }
            } else {
                $(".page-sidebar-menu").removeClass(
                    "page-sidebar-menu-hover-submenu"
                );
            }

            //sidebar position
            if (App.isRTL()) {
                if (sidebarPosOption === "left") {
                    $("body").addClass("page-sidebar-reversed");
                    $("#frontend-link")
                        .tooltip("destroy")
                        .tooltip({
                            placement: "right"
                        });
                } else {
                    $("body").removeClass("page-sidebar-reversed");
                    $("#frontend-link")
                        .tooltip("destroy")
                        .tooltip({
                            placement: "left"
                        });
                }
            } else {
                if (sidebarPosOption === "right") {
                    $("body").addClass("page-sidebar-reversed");
                    $("#frontend-link")
                        .tooltip("destroy")
                        .tooltip({
                            placement: "left"
                        });
                } else {
                    $("body").removeClass("page-sidebar-reversed");
                    $("#frontend-link")
                        .tooltip("destroy")
                        .tooltip({
                            placement: "right"
                        });
                }
            }

            Layout.fixContentHeight(); // fix content height
            Layout.initFixedSidebar(); // reinitialize fixed sidebar
        };

        // handle theme colors
        var setColor = function(color) {
            var color_ = App.isRTL() ? color + "-rtl" : color;
            $("#style_color").attr(
                "href",
                Layout.getLayoutCssPath() + "themes/" + color_ + ".min.css"
            );
            if (color == "light2") {
                $(".page-logo img").attr(
                    "src",
                    Layout.getLayoutImgPath() + "logo-invert.png"
                );
            } else {
                $(".page-logo img").attr(
                    "src",
                    Layout.getLayoutImgPath() + "logo.png"
                );
            }
        };

        $(".toggler", panel).click(function() {
            $(".toggler").hide();
            $(".toggler-close").show();
            $(".theme-panel > .theme-options").show();
        });

        $(".toggler-close", panel).click(function() {
            $(".toggler").show();
            $(".toggler-close").hide();
            $(".theme-panel > .theme-options").hide();
        });

        $(".theme-colors > ul > li", panel).click(function() {
            var color = $(this).attr("data-style");
            setColor(color);
            $("ul > li", panel).removeClass("current");
            $(this).addClass("current");
        });

        // set default theme options:

        if ($("body").hasClass("page-boxed")) {
            $(".layout-option", panel).val("boxed");
        }

        if ($("body").hasClass("page-sidebar-fixed")) {
            $(".sidebar-option", panel).val("fixed");
        }

        if ($("body").hasClass("page-header-fixed")) {
            $(".page-header-option", panel).val("fixed");
        }

        if ($("body").hasClass("page-footer-fixed")) {
            $(".page-footer-option", panel).val("fixed");
        }

        if ($("body").hasClass("page-sidebar-reversed")) {
            $(".sidebar-pos-option", panel).val("right");
        }

        if ($(".page-sidebar-menu").hasClass("page-sidebar-menu-light")) {
            $(".sidebar-style-option", panel).val("light");
        }

        if (
            $(".page-sidebar-menu").hasClass("page-sidebar-menu-hover-submenu")
        ) {
            $(".sidebar-menu-option", panel).val("hover");
        }

        var sidebarOption = $(".sidebar-option", panel).val();
        var headerOption = $(".page-header-option", panel).val();
        var footerOption = $(".page-footer-option", panel).val();
        var sidebarPosOption = $(".sidebar-pos-option", panel).val();
        var sidebarStyleOption = $(".sidebar-style-option", panel).val();
        var sidebarMenuOption = $(".sidebar-menu-option", panel).val();

        $(
            ".layout-option, .page-header-option, .page-header-top-dropdown-style-option, .sidebar-option, .page-footer-option, .sidebar-pos-option, .sidebar-style-option, .sidebar-menu-option",
            panel
        ).change(setLayout);
    };

    // handle theme style
    var setThemeStyle = function(style) {
        var file = style === "rounded" ? "components-rounded" : "components";
        file = App.isRTL() ? file + "-rtl" : file;

        $("#style_components").attr(
            "href",
            App.getGlobalCssPath() + file + ".min.css"
        );

        if (typeof Cookies !== "undefined") {
            Cookies.set("layout-style-option", style);
        }
    };

    return {
        //main function to initiate the theme
        init: function() {
            // handles style customer tool
            handleTheme();

            // handle layout style change
            $(".theme-panel .layout-style-option").change(function() {
                setThemeStyle($(this).val());
            });

            // set layout style from cookie
            if (
                typeof Cookies !== "undefined" &&
                Cookies.get("layout-style-option") === "rounded"
            ) {
                setThemeStyle(Cookies.get("layout-style-option"));
                $(".theme-panel .layout-style-option").val(
                    Cookies.get("layout-style-option")
                );
            }
        }
    };
})();

if (App.isAngularJsApp() === false) {
    jQuery(document).ready(function() {
        Demo.init(); // init metronic core componets
    });
}
